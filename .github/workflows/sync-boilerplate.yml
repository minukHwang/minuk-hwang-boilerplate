name: Sync Boilerplate

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday at midnight
  workflow_dispatch: # Manual trigger
  repository_dispatch:
    types: [sync-boilerplate]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Update boilerplate submodule
        run: |
          git submodule update --remote boilerplate
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet boilerplate; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "âœ… No changes detected in boilerplate"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "ðŸ”„ Changes detected in boilerplate"
          fi

      - name: Sync configuration files
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "ðŸ“‹ Syncing configuration files..."

          # List of files to sync
          config_files=(
            "commitlint.config.cjs"
            ".eslintrc.json"
            ".prettierrc"
            ".prettierignore"
            ".eslintignore"
            "tsconfig.json"
            "next.config.mjs"
          )

          # Copy configuration files
          for file in "${config_files[@]}"; do
            if [ -f "boilerplate/$file" ]; then
              echo "ðŸ“„ Copying $file..."
              cp "boilerplate/$file" .
            fi
          done

          # Copy husky hooks
          if [ -d "boilerplate/.husky" ]; then
            echo "ðŸ“„ Copying .husky hooks..."
            cp -r boilerplate/.husky .
            chmod +x .husky/*
          fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'feat: sync with latest boilerplate'
          title: 'ðŸ”„ Sync with latest boilerplate'
          body: |
            ## ðŸ”„ Boilerplate Synchronization

            This PR syncs the project with the latest changes from the boilerplate repository.

            ### Changes included:
            - Configuration files (ESLint, Prettier, TypeScript, etc.)
            - Git hooks (Husky)
            - Build configurations

            ### Manual review required:
            - [ ] Review package.json changes
            - [ ] Test the application
            - [ ] Update dependencies if needed

            ### Files changed:
            ```bash
            # Configuration files
            commitlint.config.cjs
            .eslintrc.json
            .prettierrc
            .prettierignore
            .eslintignore
            tsconfig.json
            next.config.mjs

            # Git hooks
            .husky/
            ```

            **Note:** Package.json changes require manual review and should be applied carefully to avoid conflicts with project-specific dependencies.

          branch: sync/boilerplate-update
          delete-branch: true
          labels: |
            boilerplate-sync
            automated
            configuration

      - name: Comment on PR
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'sync/boilerplate-update'
            });

            if (pullRequests.length > 0) {
              const pr = pullRequests[0];
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `## ðŸ¤– Automated Boilerplate Sync
                
                This PR was automatically created to sync your project with the latest boilerplate changes.
                
                ### Next steps:
                1. **Review the changes** - especially package.json modifications
                2. **Test your application** - ensure everything still works
                3. **Update dependencies** - if new packages were added
                4. **Merge the PR** - when you're satisfied with the changes
                
                ### What was updated:
                - Configuration files (ESLint, Prettier, TypeScript, etc.)
                - Git hooks and commit message rules
                - Build and development tools
                
                If you need to customize any of these changes, please modify them before merging.
                
                ---
                *This comment was automatically generated by the boilerplate sync workflow.*`
              });
            }

      - name: Success message
        if: steps.check-changes.outputs.has_changes == 'false'
        run: |
          echo "âœ… Boilerplate is already up to date!"
          echo "No changes were detected in the boilerplate repository."
